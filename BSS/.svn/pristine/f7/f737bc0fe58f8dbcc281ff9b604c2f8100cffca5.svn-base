<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@ taglib uri="http://www.springframework.org/security/tags"  prefix="security"%>

<style>
* {
	font-family: 'MICEGothic Bold';
}
#atteStimeClock, #atteEndColck{
	text-align : center;

}
.btn-group, .btn-group-vertical {
	position: relative;
	display: block;
	vertical-align: middle;
}

.pagination {
	justify-content: center
}

#button {
	display: flex;
	justify-content: flex-end;
}

#searchForm {
	display: block;
}

.row {
    display: flex;
    margin-right: -0.75rem;
    margin-left: -5.75px;
    justify-content: center;
    flex-wrap: nowrap;
    padding-bottom: 10px;
}

.attendInsert{
	display: flex;
    justify-content: space-evenly;
}
.form-control {
	width: 30%;
    display: inline-block;
}

/* 출력되는 테이블 스타일 */
#attendList{
	display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
}

/* 출근부 등록 모달 */
.modal-header > h5 {
    text-align: center;
    margin-top: 10px;
}

#modal > .form-control {
    width: 100%;
}

h4 {
    color: black;
    font-size: 45px;
    text-align: center;
}

#searchType{
	height: 39px;
}

#chooseBtn{
	width: 100%;
    text-align: right;
}

.card {
    margin: 0px 22px 22px 22px;
}

#overtimeSelect {
	margin: 0px 22px 22px 22px;
}

table {
	margin: 0px 25px 25px 25px;
}

#btn {
	margin: 15px 25px 15px;
}

#attendStimeForm {
	margin-right: 50px;
}

</style>

<h5>출퇴근 조회</h5>
<hr color="black">

	<!-- 출퇴근 사원명/사번으로 검색  -->
<div class="container-fluid">
	<div class="card">
		<div class="card-body">
			<div class="col-md-12">
				<div id="searchUI" class="row">
					<form:select path="simpleCondition.searchType"
						class="form-select col-md-1">
						<form:option value="empName" label="사원명" />
						<form:option value="empCd" label="사번" />
					</form:select>
					<input type="text" class="form-inline form-control col-md-2"
						id="searchInput" name="searchWord" placeholder="검색을 입력하세요." />
					<div class="col-md-6">
						<form:form modelAttribute="overTimeSearchForm" method="post" action="${pageContext.request.contextPath }/pm/servicemanagement/overTimeSearch.do">
							<input type="datetime-local" class="form-control"
								name="overStart" id="overStartInput" />
							<input type="datetime-local" class="form-control" name="overEnd"
								id="overEndInput" />
							<button type="submit" class="btn btn-secondary" id="selectOverTimeBtn">초과근무조회</button>
						</form:form>
					</div>
				</div>
				<div id="chooseBtn">
					<c:choose>
						<c:when test="${empty haveAtteStime}">
							<button type="button" class="btn btn-primary" id="atteStime"
								data-bs-toggle="modal" data-bs-target="#attendInsertModal">출근</button>
						</c:when>
						<c:when test="${not empty haveAtteStime and empty haveAtteEnd}">
							<button type="button" class="btn btn-danger" id="atteEnd"
								data-bs-toggle="modal" data-bs-target="#attendUpdateModal">퇴근</button>
						</c:when>
					</c:choose>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- 출퇴근 사원명/사번으로 검색 끝  -->
			
	<!-- 출근시간 등록 모달  -->
	<div class="modal fade" id="attendInsertModal" data-bs-backdrop="static" tabindex="-1">
		<div class="modal-dialog modal-fullscreen-sm-down">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">출근시간 등록</h5>
				</div>
				<div class="modal-body">
				<h2 id="atteStimeClock"></h2>
					<form:form id="attendStimeForm" modelAttribute="attend" method="post" action="${pageContext.request.contextPath }/pm/servicemanagement/attendInsert.do">
						<input type="hidden" name="atteNo" value="${attend.atteNo }" />
						<table class="table table-bordered table-hover">
							<tr>
								<th>직원명</th>
								<td id="modal">
								<security:authentication property="principal.realUser" var="authEmployee" />${authEmployee.empName}</td>
							</tr>
							<tr>
								<th>사번</th>
								<td id="modal">
								<security:authentication property="principal.realUser" var="authEmployee" />${authEmployee.empCd}</td>
							</tr>
							<tr>
								<td id="modalBtn" colspan="2">
									<button type="submit" class="btn btn-success" id="attendStimeBtn" value="등록">등록</button>
								</td>
							</tr>
						</table>
					</form:form>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
				</div>
			</div>
		</div>
	</div>
	<!-- 출근시간 등록 모달 끝  -->

	<!-- 퇴근시간 등록 모달  -->
	<div class="modal fade" id="attendUpdateModal" data-bs-backdrop="static" tabindex="-1">
		<div class="modal-dialog modal-fullscreen-sm-down">
			<div class="modal-content">
				<div class="modal-header">
					
					<h5 class="modal-title">퇴근시간 등록</h5>
				</div>
				<div class="modal-body">
				<h2 id="atteEndColck"></h2>
					<form:form id="attendEndForm" modelAttribute="attend" method="post" action="${pageContext.request.contextPath }/pm/servicemanagement/attendEnd.do">
						<input type="hidden" name="atteNo" value="${haveAtteEnd.atteNo }" />
						<input type="hidden" name="empCd" value="${authEmployee.empCd}" />
						<table class="table table-bordered table-hover">
							<tr>
								<th>직원명</th>
								<td id="modal">
								<security:authentication property="principal.realUser" var="authEmployee" />${authEmployee.empName}</td>
							</tr>
							<tr>
								<th>사번</th>
								<td id="modal">
								<security:authentication property="principal.realUser" var="authEmployee" />${authEmployee.empCd}</td>
							</tr>
							<tr>
								<td id="modalBtn" colspan="2">
									<button type="submit" class="btn btn-success" id="attendEndBtn"  value="등록">등록</button>
								</td>
							</tr>
						</table>
					</form:form>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
				</div>
			</div>
		</div>
	</div>
	<!-- 퇴근시간 등록 모달 끝  -->

	<!-- 초과근무 조회되는 폼  -->
	<div class="container-fluid">
		<div class="card">
			<div class="card-body" id = "overtimeSelect">
				<div id="overTimeList"></div>
			</div>
		</div>
	</div>

	<!-- 출근부 조회되는 폼  -->
	<div class="container-fluid">
		<div class="card">
		<div id="attendList"></div>
			<form:form id="searchForm" action="${pageContext.request.contextPath }/pm/servicemanagement/attendList" modelAttribute="simpleCondition">
				<form:hidden path="searchType" />
				<form:hidden path="searchWord" />
				<input type="hidden" name="page" />
			</form:form>
		</div>
	</div>
	<!-- 출근부 조회되는 폼 끝-->

<script>


	//조회 버튼 클릭 이벤트 처리
	$("#selectOverTimeBtn").on("click", function() {
		event.preventDefault();
		searchOverTime(); // 조회 함수 호출
	});
	
	//초과근무 조회 실행 함수
	function searchOverTime() {
		let overStartValue = $("#overStartInput").val(); // 입력 필드의 값 가져오기
		let overEndValue = $("#overEndInput").val(); // 입력 필드의 값 가져오기

		let setting = {
			url : `${pageContext.request.contextPath}/pm/servicemanagement/overTimeSearch.do`,
			method : "POST",
			dataType : "html",
			data : {
				overStart : overStartValue,
				overEnd : overEndValue
			},
			success : function(resp) {
				$('#overTimeList').html(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		};
		$.ajax(setting);
	}

	
	
	//출근시간 등록 버튼에 대한 이벤트 리스너
	$("#attendStimeBtn").on("click", function() {
		// 출근시간 등록 폼을 제출하는 코드 추가
		$("#attendStimeForm").submit();

		// 등록 확인 대화상자 표시
		confirm("출근시간이 등록되었습니다.");
	});

	// 퇴근시간 등록 버튼에 대한 이벤트 리스너
	$("#attendEndBtn").on("click", function() {
		// 퇴근시간 등록 폼을 제출하는 코드 추가
		$("#attendEndForm").submit();

		// 등록 확인 대화상자 표시
		confirm("퇴근시간이 등록되었습니다.");
	});

	/* 출근시간  */
	const atteStimeClock = document.getElementById("atteStimeClock");

	function getAtteStimeClock() {
		const today = new Date();
		
		var year = today.getFullYear();
		var month = ('0' + (today.getMonth() + 1)).slice(-2);
		var day = ('0' + today.getDate()).slice(-2);
		
		const h = String(today.getHours()).padStart(2, "0");
		const m = String(today.getMinutes()).padStart(2, "0");
		const s = String(today.getSeconds()).padStart(2, "0");

		let atteStime = `\${year}년 \${month}월 \${day}일 \${h}:\${m}:\${s}`;
		atteStimeClock.innerHTML = atteStime;
	}

	getAtteStimeClock(); //맨처음에 한번 실행
	setInterval(getAtteStimeClock, 1000); //1초 주기로 새로실행

	/* 퇴근시간  */
	const atteEndColck = document.getElementById("atteEndColck");

	function getAtteEndClock() {
		const todays = new Date();
		
		var year = todays.getFullYear();
		var month = ('0' + (todays.getMonth() + 1)).slice(-2);
		var day = ('0' + todays.getDate()).slice(-2);
		
		const hh = String(todays.getHours()).padStart(2, "0");
		const mm = String(todays.getMinutes()).padStart(2, "0");
		const ss = String(todays.getSeconds()).padStart(2, "0");

		let atteEnd = `\${year}년 \${month}월 \${day}일 \${hh}:\${mm}:\${ss}`;
		atteEndColck.innerHTML = atteEnd;
	}

	getAtteEndClock(); //맨처음에 한번 실행
	setInterval(getAtteEndClock, 1000); //1초 주기로 새로실행

	/* 전체조회 페이징  */
	function fn_paging(page) {
		searchForm.page.value = page;
		$(searchForm).submit();
	}

	/* 직원조회 실행함수 */
	$(function() {
		searchEmp();
	});

	/* 직원조회  */
	let data = {};
	function searchEmp() {
		let setting = {
			url : `${pageContext.request.contextPath }/pm/servicemanagement/attendList`,
			method : "",
			dataType : "text",
			data : data,
			success : function(resp) {
				$('#attendList').html(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR)
				console.log(status)
				console.log(error)
			}
		}
		$.ajax(setting);
	}

	/* 검색한 조회 값의 페이징 */
	function fn_paging(page) {
		searchForm.page.value = page;
		data.page = page;
		searchEmp();
	}

	/* 검색  */
	$(searchInput).on("keyup", function(event) {
		$(searchUI).find(":input[name]").each(function(idx, input) {
			let name = input.name;
			let value = $(input).val();
			data[name] = value;
		});
		fn_paging(1);
		searchEmp();
	});
</script>