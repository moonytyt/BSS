package kr.or.ddit.BoardNtc.service;

import java.io.IOException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.BoardNtc.dao.NtcboardDAO;
import kr.or.ddit.BoardNtc.vo.NtcboardVO;
import kr.or.ddit.BoardReq.vo.ReqboardVO;
import kr.or.ddit.atch.service.AtchFileService;
//import kr.or.ddit.atch.service.AtchFileService;
import kr.or.ddit.atch.vo.AtchFileDetailVO;
import kr.or.ddit.atch.vo.AtchFileVO;
import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.exception.PKNotFoundException;
import kr.or.ddit.vo.PaginationInfo;
import lombok.extern.slf4j.Slf4j;

@Service
public class NtcboardServiceImpl implements NtcboardSerivce {

	@Inject
	private NtcboardDAO ntcDAO;
//	@Inject
//	private AtchFileService atchService;
////	@Value("#{appInfo.atchPath}")
//	private Resource atchPath;

//	private void processAtchFileGroup(NtcboardVO ntc) {
//		MultipartFile[] boFiles = ntc.getBoFiles();
//		if(boFiles==null) return;
//		List<AtchFileDetailVO> detailList = new ArrayList<>();
//		for(MultipartFile boFile : boFiles) {
//			if(boFile.isEmpty()) continue;
//			detailList.add( new AtchFileDetailVO(boFile) );
//		}
//		
//		if(detailList.size()>0) {
//			int atchNo = Optional.ofNullable(ntc.getFileGroup())
//									.map(fg->{
//										try {
//											atchService.addAtchFileGroup(fg.getAtchNo(), detailList, atchPath);
//											return fg.getAtchNo();
//										} catch (IOException e) {
//											throw new RuntimeException(e);
//										}
//									}).orElseGet(()->{
//										try {
//											AtchFileVO group = new AtchFileVO();
//											group.setDetailList(detailList);
//											atchService.createAtchFileGroup(group, atchPath);
//											return group.getAtchNo();
//										} catch (IOException e) {
//											throw new RuntimeException(e);
//										}
//									});
////			ntc.setAtchFileId(atchFileId);
//			ntc.setAtchFileId(atchNo);
	
	
	
//			
//		}
//		
//	}
	

	@Override
	public NtcboardVO retrieveNtc(int ntcNo) throws PKNotFoundException {
		NtcboardVO ntc = ntcDAO.selectNtc(ntcNo);
		if(ntc==null)
			throw new PKNotFoundException(MessageFormat.format("{0} 해당 글 없음", ntcNo));
		return ntc;
	}

	@Override
	public List<NtcboardVO> retrieveNtcList(PaginationInfo<NtcboardVO> paging) {
		long totalRecord = ntcDAO.selectTotalRecord(paging);
		paging.setTotalRecord(totalRecord);
		return ntcDAO.selectNtcList(paging);
	}

	@Override
	public boolean modifyNtc(NtcboardVO ntc) {

//		processAtchFileGroup(ntc);
		
		return ntcDAO.updateNtc(ntc) > 0;
	}

	@Override
	public boolean removeNtc(NtcboardVO ntc) {
		return true;
	}

	@Override
	public boolean createNtc(NtcboardVO ntc) {
		return ntcDAO.insertNtc(ntc);
	}



}
