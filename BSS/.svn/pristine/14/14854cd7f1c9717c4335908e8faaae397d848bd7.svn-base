package kr.or.ddit.edApproval.controller;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.edApproval.dao.SignpathDAO;
import kr.or.ddit.edApproval.service.SignpathService;
import kr.or.ddit.edApproval.vo.SignpathDetailVO;
import kr.or.ddit.edApproval.vo.SignpathVO;
import kr.or.ddit.employee.vo.EmployeeVO;
import kr.or.ddit.employee.vo.EmployeeVOWrapper;
import kr.or.ddit.pagingVO.PaginationInfo;
import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
@RequestMapping("ed/approval/")
public class SignpathController {

	@Inject
	private SignpathDAO signpathDao;

	@Inject
	private SignpathService signpathService;

	// 결재선 관리폼
	@RequestMapping("signpathSave.do")
	public String signpathSave() {
		
		return "ed/approval/signpathSave";
	}

	// 결재선 관리
	@PostMapping("signpathSaveList.do")
	public String signpathSaveList(@RequestBody PaginationInfo<SignpathVO> paramPaging
			, Authentication authentication
			,Model model
			) {
		
		EmployeeVOWrapper wrapper = (EmployeeVOWrapper) authentication.getPrincipal();
		EmployeeVO employee = wrapper.getRealUser();
		PaginationInfo<SignpathVO> paging = new PaginationInfo<SignpathVO>(5,5);
		paging.setCurrentPage(paramPaging.getCurrentPage());
		Map<String, Object> condition = new HashMap<String, Object>();
		condition.put("empCd", employee.getEmpCd());
		paging.setDetailCondition(condition);
		List<SignpathVO> signpathList = signpathService.retrieveSignpathList(paging);
		paging.setDataList(signpathList);
		
		SignpathDetailVO pSignpathDetail = new SignpathDetailVO();
		pSignpathDetail.setEmpCd(employee.getEmpCd());
		List<SignpathDetailVO> signpathDetailList = signpathDao.selectSignpathDetailList(pSignpathDetail);
		
		
		model.addAttribute("paging",paging);
		model.addAttribute("signpathDetailList",signpathDetailList);
		return "ed/approval/ajax/signpathList";
	}
	
	// 결재선 삭제
	@PostMapping("signPathDelete.do")
	public String signPathDelete(@RequestBody Map<String, Object>paramMap,Model model) {
		
		if(paramMap!=null && !paramMap.isEmpty()) {
			List<String> signpathNoList = (List<String>) paramMap.get("signpathNo");
			
			for(String signpathNo:signpathNoList) {
				SignpathVO signPath = new SignpathVO();
				signPath.setSignpathNo(Integer.parseInt(signpathNo));
				signpathDao.deleteSignPath(signPath);
			}
		}
		model.addAttribute("result",true);
		return "jsonView";
	}

}
