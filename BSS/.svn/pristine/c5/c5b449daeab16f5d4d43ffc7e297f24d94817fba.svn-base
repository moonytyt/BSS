<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@ taglib uri="http://www.springframework.org/security/tags"  prefix="security"%>
<style>
* {
	font-family: 'MICEGothic Bold';
}
.btn-group, .btn-group-vertical {
    position: relative;
    display: block;
    vertical-align: middle;
}

.pagination{
	justify-content: center
}

.card {
	padding-top: 20px;
    padding-bottom: 30px;
}

.form-inline{
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    flex-wrap: wrap;
    justify-content: space-around;
}

#button{
	margin-left: 10px;
	display: flex;
    flex-direction: row;
    justify-content: flex-end;
}

#category{
	display:flex; 
	justify-content: space-evenly;
}

.form-inline label {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 20px;
    margin-left: 20px;
}

#searchBtn {
	float:right;
	margin-left: 10px;
}

#selectDiv{
	display:flex; 
	justify-content: space-evenly;
}

/* .modal-body2 { */
/* 	padding: 0px 20px; */
/* } */

.card{
	padding-top: 20px;
    padding-bottom: 30px;
    margin: 35px 10px 10px 10px;
    
}

label{
	font-weight: bold;
    font-size: larger;
}

table>thead, #center{
	text-align : center;
}

.modal-content {
    width: 120%;
}

#btngroup {
	place-self: flex-end;
    margin-right: 30px;
}
</style>

<h5>직원교육</h5>
<hr color="black">
<div class="container-fluid">
    <div class="card" >
    	<div class="card-body">
        <div class="col-md-12" id="selectDiv">
            <!-- 검색/조회 입력하는 폼 -->
            <form class="form-inline" name="searchForm" id="searchForm" method="post" >
            <input type="hidden" id="pageNo" name="page" />
                <div id="category">
                    <div class="form-group">
                        <label for="trainDate">교육일</label>
                        <input type="date" class="form-control" id="trainDate" name="trainDate"/>
                     
                        <label for="trainName">교육명</label>
                        <input type="text" class="form-control" id="trainName" name="trainName" value="" />

                        <label for="lectorName">강사명</label>
                        <input type="text" class="form-control" id="lectorName" name="lectorName" value="" />
	                </div>
	                <div id="searchBtn">
	                    <button type="button" class="btn btn-primary" id="selectBtn">조회</button>
	                    <input type="reset" class="btn btn-secondary" id="resetBtn" />
		         	</div>
	    	     </div>
	      	</form>
      	<!-- 검색/조회 입력하는 폼 끝 -->
       </div>
    </div>
    </div>
</div>

<!-- 직원교육 조회되는 폼 -->
<div class="container-fluid">
	<div class="card">
		<div id="btngroup">
<%-- 			<input type="button" class="btn btn-primary" value="교육등록" onClick="location.href='${pageContext.request.contextPath}/pm/training/trainingInsert.do'"/> --%>
			<button class="btn btn-success" type="button" id="MyupdateBtn" onClick="location.href='${pageContext.request.contextPath}papers/trainingPaper'">수료증 출력</button>
			<button class="btn btn-secondary" type="button" id="MydeleteBtn">신청취소</button>
		</div>
		<div class="card-body" id="overtimeSelect">
			<div class="table" id="table">
				<div class="col-md-12">
					<table class="table table-bordered table-hover">
						<thead>
							<tr class="table-secondary">
								<th>No</th>
								<th id="trainName">교육명</th>
								<th>강사명</th>
								<th>교육일</th>
								<th>소요시간</th>
								<th>교육장소</th>
<!-- 								<th>신청마감일</th> -->
								<th>신청일자</th>
								<th>진행상태</th>
								<th>선택</th>
							</tr>
						</thead>
						<tbody>
							<c:set var="trainAppList" value="${paging.dataList }" />
							<c:if test="${empty trainAppList }">
								<tr>
									<td id="col" colspan="6">조회된 직원교육이 없습니다.</td>
								</tr>
							</c:if>
							<c:if test="${not empty trainAppList }">
								<c:forEach items="${trainAppList }" var="mytrain">
									<tr class="clickable-row textCenter">
										<%-- <input type="hidden" name="trainNo" value="${mytrain.trainNo}" /> --%>
										<input type="hidden" name="empCd" value="${mytrain.empCd}" />
										<td>${mytrain.trainNo}</td>
										<td class="textLeft">${mytrain.trainName}</td>
										<td>${mytrain.lectorName}</td>
										<td>${mytrain.trainDate.toString().replace('T',' ')}</td>
										<td>${mytrain.trainTime}</td>
										<td>${mytrain.trainPlace}</td>
<%-- 										<td>${mytrain.trainPeriod.toString().replace('T',' ')}</td> --%>
										<td>${mytrain.taDate}</td>
										<td>${mytrain.appCheck}</td>
										<c:choose>
											<c:when test="${mytrain.appCheck == '신청'}">
												<td><input type="checkbox" class="clickApp">
												</td>
											</c:when>
											<c:when test="${mytrain.appCheck == '완료'}">
												<td><input type="checkbox" class="clickCom"></td>
											 </c:when>
										</c:choose>
									</tr>
								</c:forEach>
							</c:if>
						</tbody>
						<tfoot>
							<tr>
								<td colspan="9">${paging.pagingHTML }</td>
							</tr>
						</tfoot>
					</table>
				</div>
				<input type="hidden" name="page" />
			</div>
		</div>
	</div>
</div>



<script>


// //체크박스 선택되었을 때 
// $('input#checkAll').on('change', function () {
//     if ($(this).is(':checked')) {
//         $('#MyupdateBtn').prop('disabled', false);
//     }
// });
// //체크박스를 DISABLE 또는 ENABLE 상태로 설정하는 함수
// function toggleCheckboxState(checkbox, disabled) {
//     checkbox.prop("disabled", disabled);
// }
// // 체크박스 상태를 다시 설정하는 함수
// function setCheckboxStates(trainAppList) {
//     $(".clickable-row").each(function(index) {
//         var $row = $(this);
//         var trainPeriod = new Date(trainAppList[index].trainPeriod.replace(' ', 'T')); // 신청마감일
        
//         if (trainPeriod < new Date()) {
//             toggleCheckboxState($row.find("input[type='checkbox']"), true); // 이전일 경우 체크박스 DISABLE
//         } else {
//             toggleCheckboxState($row.find("input[type='checkbox']"), false); // 현재 또는 미래일 경우 체크박스 ENABLE
//         }
//     });
// }
// $(document).ready(function() {
//     // 페이지 로드 시 체크박스 상태 설정
//     setCheckboxStates([]);
    
//     // 페이징 및 다른 요소의 클릭 이벤트 시 체크박스 상태 다시 설정
//     $(document).on("click", ".pagination-link, .clickable-row", function() {
//         // AJAX 요청을 통해 해당 페이지의 교육 데이터와 마감일을 가져옴
//         $.ajax({
//             type: "get",
//             url: "${pageContext.request.contextPath}/pm/training/trainingSearchList",
//             dataType: "json",
//             data: { page: searchForm.page.value },
//             success: function(response) {
//                 var trainAppList = response.trainAppList;

//                 // 체크박스 상태 다시 설정
//                 setCheckboxStates(trainAppList);
//             },
//             error: function(xhr, status, error) {
//                 console.error("Error:", error);
//             }
//         });
//     });
// });


// 교육 취소
$(document).ready(function() {
    $('#MydeleteBtn').click(function() {
        var selectedCheckboxes = $('input[type="checkbox"]:checked');
        
        if (selectedCheckboxes.length === 0) {
            alert("교육을 선택해주세요.");
            return;
        }

        var selectedRow = selectedCheckboxes.first().closest('tr');
        // 선택한 인풋박스가 .clickApp(신청상태)인 것 변수에 저장
        var isClickApp = selectedRow.find('input[type="checkbox"]').hasClass('clickApp');
        var empCd = $(this).data("empCd");

        if (isClickApp) {
            var selectedTrainNo = selectedRow.find('td:first').text();

            $.ajax({
                type: 'POST',
                url: '${pageContext.request.contextPath}/pm/training/trainingApplyDelete.do',
                data: {
                    trainNo: selectedTrainNo,
                    empCd: empCd
                },
                success: function(response) {
                    alert("교육 취소가 완료되었습니다.");
                    location.reload();
                },
                error: function(error) {
                    alert("신청 취소에 실패하였습니다.");
                    location.reload();
                }
            });
        } else {
        	// .clickApp가 아니면 완료된 교육이므로 alert
            alert("이미 완료된 교육입니다.");
        }
    });
});


// 페이징 시에 호출되는 함수
function fn_paging(page) {
    searchForm.page.value = page;
    console.log(page);
    // search 함수를 호출하여 AJAX 요청 수행
    search(page);
    

    function search(page) {
	    let empCd = ${paging.empCd};
// 	    let empCd = ${empCd};
	    console.log(empCd);
	    
        let setting = {
            url: "${pageContext.request.contextPath}/mypage/mytrainingPaging",
            method: "get", 
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: {page: page , empCd : empCd
            },
            success: function(response) {
                console.log(response);

                var trainAppList = response.trainAppList;
                var paging = response.paging;

                var resultsHtml = "";
                
                resultsHtml += 
                	`
    				<div class="col-md-12">
					<table class="table table-bordered table-hover">
						<thead>
							<tr class="table-secondary">
								<th>No</th>
								<th>교육명</th>
								<th>강사명</th>
								<th>교육일</th>
								<th>소요시간</th>
								<th>교육장소</th>
// 								<th>신청마감일</th>
								<th>신청일자</th>
								<th>진행상태</th>
							</tr>
						</thead>
						<tbody>
                	`;

				if(trainAppList && trainAppList.length > 0){
	                for (var i = 0; i < trainAppList.length; i++) {
	                    var mytrain = trainAppList[i];
	                    
	                    resultsHtml += 
	                    "<tr class='textCenter'>" +
	                    "<input type='hidden' name='empCd' value= "+ mytrain.empCd + "/>" +
	                    "<td>" + mytrain.trainNo + "</td>" +
	                    "<td class='textLeft'>" + mytrain.trainName + "</td>" +
	                    "<td>" + mytrain.lectorName + "</td>" +
	                    "<td>" + mytrain.trainDate.toString().replace('T',' ') + "</td>" +
	                    "<td>" + mytrain.trainPlace + "</td>" +
	                    "<td>" + mytrain.trainTime + "</td>" +
// 	                    "<td>" + mytrain.trainPeriod.toString().replace('T',' ') + "</td>" +
	                    "<td>" + mytrain.taDate + "</td>" +
	                    "<td>" + mytrain.appCheck + "</td>"
// 	                    +
// 	                    "<td class='exclude-click'><input type='checkbox' id='checkAll' class='exclude-click'></td>" +
// 	                    "</tr>"
	                    ;
	                }
	                resultsHtml += "<tr><td colspan='8'>" + response.paging.pagingHTML + "</td></tr></tbody>";
	
	                $("#table").html(resultsHtml);
	
	                // 체크박스 상태 다시 설정
// 	                setCheckboxStates(trainAppList);
	                
				}else{
					resultsHtml = "<tr><td colspan='6'>조회된 직원교육이 없습니다.</td></tr>";
				}
            },
            error: function(xhr, status, error) {
                console.error("Error:", error); 
            }
        };
        $.ajax(setting); // AJAX 요청 실행
    }
}


</script>