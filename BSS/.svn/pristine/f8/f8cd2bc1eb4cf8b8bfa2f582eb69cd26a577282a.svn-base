package kr.or.ddit.calendar.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.calendar.service.CompanyService;
import kr.or.ddit.calendar.vo.CompanyVO;
import kr.or.ddit.validate.groups.InsertGroup;
import kr.or.ddit.validate.groups.UpdateGroup;
import lombok.RequiredArgsConstructor;

/**
 * @author PC-13
 * 회사일정 조회
 */
@RequiredArgsConstructor
@Controller
public class CompanyCalendarController {
	private final CompanyService service;
	
	@GetMapping("/calendar/companycalendar")
	public String view(Model model){
		
		return "calendar/companycalendar";
	}
	
	
	@PostMapping(value ="/calendar/companycalendar" , produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<CompanyVO> list(Model model){
		
		List<CompanyVO> companyList = service.retrievecomList();
		
		
		List<Map<String, Object>> mapList = new ArrayList<Map<String,Object>>();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("title", "회의");
		map.put("start", "2023-08-03");
		map.put("end", "2023-08-04");
		
		mapList.add(map);
		
		return companyList;
	}
	
	/**
	 * 회사일정 등록
	 * @param comSCNO
	 * @param model
	 * @return
	 */
	@RequestMapping("/calendar/companyInsert.do")
	public String companyInsert(
				@ModelAttribute("company")@Validated(InsertGroup.class) CompanyVO company
				,Errors errors
				,Model model
			) {
		String viewName;
		if(!errors.hasErrors()&&company.getCompanyList().size()>0) {
			boolean success =service.createCompany(company.getCompanyList());
			if(success) {
				viewName= "redirect:/company/companyList.do";
			}else {
				viewName= "company/companyList";
			}
		}else {
			viewName= "company/companyList";
		}
		return viewName;
	}
	
	/**
	 * 회사일정 수정
	 * @param comSCNO
	 * @param model
	 * @return
	 */
	@GetMapping("/calendar/companyModify.do")
	public String companyModify(String companySCNO
			,Model model
			) {
		CompanyVO company=service.retrieveCompany(companySCNO);
		model.addAttribute("company",company);
		return "/calendar/companycalendarForm";
	}
	
	@PostMapping("companyModify.do")
	public String companyModifyProc(
			@ModelAttribute("company")@Validated(UpdateGroup.class) CompanyVO company
			,Errors errors
			,Model model
			) {
		String viewName;
		if(!errors.hasErrors()) {
			boolean success =service.modifyCompany(company);
			if(success) {
				viewName= "redirect:/company/companyList.do";
			}else {
				model.addAttribute("message","일정 수정중 에러발생으로 실패");
				viewName="calendar/companycalendar";
			}
		}else {
			viewName="redirect:/company/companyList.do";
			model.addAttribute("message","실패");
		}
		return viewName;
	}
	
//	/**
//	 * 회사일정 삭제
//	 * @return
//	 */
//	@RequestMapping("companyDelete.do")
//	@ResponseBody
//	public String companyDelete(String[] companySCNO) {
//		boolean success = service.removeCompany(companySCNO);
//		String result = null;
//		if(success) {
//			result ="success";
//		}else {
//			result="fail";
//		}
//		return result;
//	}
	
	
}