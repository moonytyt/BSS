package kr.or.ddit.attendance.controller;

import java.time.LocalDate;
import java.util.List;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.attendance.service.AttendanceService;
import kr.or.ddit.attendance.vo.AttendanceVO;
import kr.or.ddit.employee.vo.EmployeeVOWrapper;
import kr.or.ddit.pagingVO.PaginationInfo;
import kr.or.ddit.pagingVO.SimpleCondition;
import kr.or.ddit.vocation.vo.VocationVO;
import lombok.RequiredArgsConstructor;

/**
 * 출퇴근 조회, 검색 
 *
 */
@Controller
@RequiredArgsConstructor
public class AttendanceController {
	
	private final AttendanceService service;
	
	@ModelAttribute("attendance")
	public AttendanceVO attendance() {
		return new AttendanceVO();
	}
	
	/**
	 * 페이징 조건부분에 쓰는 부분
	 * @return
	 */
	@ModelAttribute("simpleCondition")
	public SimpleCondition simpleCondition() {
	      return new SimpleCondition();
	}
	/**
	 * 출퇴근조회 클릭 시 첫 화면
	 * @return
	 */
	@RequestMapping("/pm/servicemanagement/attend")
	public String attendList(
			@ModelAttribute("attend") AttendanceVO attend
			, Authentication authentication
			, Model model
			
	) {
		
		EmployeeVOWrapper wrapper = (EmployeeVOWrapper) authentication.getPrincipal();
		String emp = wrapper.getRealUser().getEmpCd();
		attend.setEmpCd(emp); //사원번호
		
		LocalDate currentDate = LocalDate.now();
		attend.setAtteDate(currentDate); //출근일
		
		AttendanceVO haveAtteStime = service.retrieveHaveAtteStime(attend);
		AttendanceVO haveAtteEnd = service.retrieveHaveAtteEnd(attend);
		model.addAttribute("haveAtteStime",haveAtteStime);
		model.addAttribute("haveAtteEnd",haveAtteEnd);
		return "pm/servicemanagement/attend";
	}
	
	
	/**
	 * 출퇴근 조회 검색
	 * @param currentPage
	 * @param simpleCondition
	 * @param model
	 * @return
	 */
	@RequestMapping("/pm/servicemanagement/attendList")
	public String attenView(
			@RequestParam(name = "page", required = false, defaultValue = "1") long currentPage
			, @ModelAttribute("simpleCondition") SimpleCondition simpleCondition
			, Model model
			) {
		PaginationInfo<AttendanceVO> paging = new PaginationInfo<>(10, 5);
		paging.setCurrentPage(currentPage);
		paging.setSimpleCondition(simpleCondition);
		
		List<AttendanceVO> attendList = service.retrieveAttendList(paging);
		paging.setDataList(attendList);
		model.addAttribute("paging", paging);
		return "pm/servicemanagement/ajax/attendList";
	}
	
	
	/**
	 * 출퇴근 조회 검색할 때 비동기로 검색되는 부분
	 * @param currentPage
	 * @param simpleCondition
	 * @param model
	 * @return
	 */
	@PostMapping("/pm/servicemanagement/attendSearchList")
	public String atteSearch(
			 @RequestBody AttendanceVO searchAttend
				, Model model
	) {
		PaginationInfo<AttendanceVO> paging = new PaginationInfo<>(10, 5);
		paging.setCurrentPage(searchAttend.getCurrentPage());
		
		paging.setDetailConditionVO(searchAttend);
		
		List<AttendanceVO> attendList = service.searchAttendList(paging);
		paging.setDataList(attendList);
		model.addAttribute("paging", paging);
		
		return "jsonView";
	}
	
}
