<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security"%>
<!-- c3.css -->
<link rel="stylesheet"
	href="<%=request.getContextPath()%>/resources/css/c3.css">

<!-- c3.js -->
<script src="${pageContext.request.contextPath }/resources/js/c3/c3.js"></script>
<script
	src="${pageContext.request.contextPath }/resources/js/c3/d3-5.8.2.min.js"></script>
<style>
#node0 {
	display: flex;
}

#node1 {
/* 	float: left; */
	width: 50%;
	height: 472px;
	margin-right: 30px;
}

#node2 {
    width: 70%;
	height: 472px;;
	margin-right: 30px;
	display: block;
}

#node3 {
 	width: 30%;
	display: flex;
	box-sizing: border-box;
}

#node4 {
	width: 890px;
	height: 460px;
	display: inline-flex;
}

#node5 {
	display: inline-flex;
    width: 720px;
	height: 460px;
	margin-right: 25px;
}

#node6 {
	width: 600px;
}

#node1-1 {
	display: inline-flex;
	width: 100%;
}

#node1-2 {
	display: flex;
	padding-top: 25px;
}

.card {
	width: 100%;
}

.card-body {
	text-align: center;
}

#all {
	padding: 15px 0px 0px 15px;
    margin: 0px 20px 0px 20px;
}
img {
	width: 100%;
	height: 200px;
}

#ntcList {
    max-height: 300px; /* 원하는 높이로 설정 (넘칠 경우 스크롤바가 표시됩니다) */
    overflow-y: auto; /* 세로 스크롤바 표시 */
}
</style>
<security:authentication property="principal.realUser" var="authEmployee" />
<div id="all">
<div id="node0">
	<div id="node1-1">
		<div id="node2" class="card">
			<div class="card-header">캘린더</div>
			<div class="card-body">
				<h5 class="card-title">Special title treatment</h5>
				<p class="card-text">With supporting text below as a natural
					lead-in to additional content.</p>
				<a href="#" class="btn btn-primary">Go somewhere</a>
			</div>
		</div>
		<div id="node3">
			<div class="card">
				<div class="card-header">
					<img src="${ pageContext.request.contextPath}/resources/empProfile/${authEmployee.outAtchNm }" alt="직원 프로필 사진">
				</div>
				<div class="card-body">
					<p class="card-text">이름 : <security:authentication property="principal.realUser" var="authEmployee" />${authEmployee.empName}</p>
					<p class="card-text">사번: <security:authentication property="principal.realUser" var="authEmployee" />${authEmployee.empCd}</p>
					<p class="card-text">부서: <security:authentication property="principal.realUser" var="authEmployee" />${authEmployee.depName}</p>
					<a href="${pageContext.request.contextPath }/employee/mypage" class="btn btn-primary">마이페이지</a>
				</div>
			</div>
		</div>
		
		</div>
		
	</div>
	<div id="node1-2">
		<div id="node5" class="card">
			<div class="card-header">결재할 서류</div>
			<div class="card-body">
				<div id="mainWaitList"></div>
				<a href="${pageContext.request.contextPath }/ed/document/documentWaitList.do" class="btn btn-primary">Go Sign</a>
			</div>
		</div>
		<div id="node4" class="card">
			<div class="card-header">공지사항</div>
			<div class="card-body">
			
				<div id="ntcList"></div>
				<a href="${pageContext.request.contextPath }/board/ntcAllList" class="btn btn-primary">공지사항 더보기</a>
			</div>
		</div>
	</div>
	<div id="chart" class="d-flex mt-4 mb-4">
	
		<div class="card me-1">
			<div class="card-header">환율</div>
			<div class="card-body">
				<div id="chart1"></div>
				<a href="${pageContext.request.contextPath }/finMarket/exchangeRate" class="btn btn-primary">더보기</a>
			</div>
		</div>
		
		<div class="card">
			<div class="card-header">코스피/코스닥</div>
			<div class="card-body">
				<div id="chart2"></div>
				<a href="${pageContext.request.contextPath }/finMarket/stockMarket" class="btn btn-primary">더보기</a>
			</div>
		</div>
		
	</div>
</div>

<script>
	$(function() {
		searchDoc();
		exchageRateChart();
		stockMarketChart();
	});
	
	let doc={};
	
	function searchDoc() {
		let setting = {
			url : `${pageContext.request.contextPath }/ed/document/mainWaitList.do`,
			method : "",
			dataType : "text",
			data : doc,
			success : function(resp) {
				$('#mainWaitList').html(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR)
				console.log(status)
				console.log(error)
			}
		}
		$.ajax(setting);
	}
	
	function exchageRateChart() {
		let setting = {
			url : `${pageContext.request.contextPath }/finMarket/mainExchangeRateList`,
			method : "",
			dataType : "json",
			data : "",
			success : function(resp) {
				makeBarChart(resp,"#chart1");
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR)
				console.log(status)
				console.log(error)
			}
		}
		$.ajax(setting);
	}
	
	function stockMarketChart() {
		$.ajax({
			url : `${pageContext.request.contextPath}/finMarket/mainStockMarket`,
			type : 'GET',
			dataType : 'json',
			success : function(result) {
				makeBarChart(result,"#chart2");
			},
			error : function(result) {
				console.log("error >> " + $(result).text());
			}
		});
	}
	
	function makeBarChart(jsonData,chartArea) {
		var chartType = $(".chartType").val();
		var rows = jsonData.itemList;
		var unitName= rows[0].UNIT_NAME;
		var dataList = [];
		var dataListNm = jsonData.dataListNm;
		var baseMonthList = jsonData.timeList;
		// 		for(let i = 0;i< rows.length;i++){
		// 			dataListNm.push(rows[i].ITEM_NAME1);
		// 		}
		for (let i = 0; i < rows.length; i++) {
			dataList.push(rows[i].DATA_VALUE)
		}
		var rowData = [];
		var columns = [];
		var beforeColumns = [];
		// 		var datas = new Array();
		// 		var beforeDatas = new Array();
		var x = [ "x" ];

		for (let i = 0; i < baseMonthList.length; i++) {
			x.push(baseMonthList[i]);
		}
		columns.push(x);
		beforeColumns.push(x);
		console.log(x);
		// 		for ( var row in rows) {
		// 		datas.push(x);
		for (let i = 0; i < dataListNm.length; i++) {
			var rowData = [ dataListNm[i] ];
			for (let j = i * baseMonthList.length; j < i * baseMonthList.length
					+ baseMonthList.length; j++) {
				rowData.push(dataList[j]);
			}
			columns.push(rowData);
		}
		console.log("columns : " + columns)
		for (let i = 0; i < dataListNm.length; i++) {
			var rowData = [ dataListNm[i] ];
			for (let j = i * baseMonthList.length; j < i * baseMonthList.length
					+ baseMonthList.length; j++) {
				rowData.push(0);
			}
			beforeColumns.push(rowData);
		}

		var chart = c3.generate({
			bindto : chartArea,
			data : {
				type : "line",
				x : 'x',
				columns : beforeColumns
			},
			bar : {
				width : {
					radio : 0.5
				}
			},
			legend : {
				position : 'right'
			},
			axis : {
				x : {
					type : 'category' // x축을 카테고리 형태로 사용
				},
				y : {
					label : {
						text : unitName,
						position : 'outer-middle'
					}
				}
			},
			zoom : {
				enabled : true
			},
			size : {
				height : 350
			},
			tooltip : {
				grouped : false
			}
		});

// 		setTimeout(function() {
// 			chart.load({
// 				columns : columns
// 			});
// 		}, 200);
		const sliderImage = document.querySelector("#chart");

		function checkSlide(e) {
		          const viewportBottom = window.innerHeight + window.scrollY;
		          const imageHalfBottom =
		            sliderImage.offsetTop + sliderImage.offsetHeight / 2;
		          const isHalfShown = viewportBottom > imageHalfBottom;
		          const isNotScrollPast =
		          window.scrollY < sliderImage.offsetTop + sliderImage.height;
					console.log(isNotScrollPast)
		          if (isHalfShown ) {
		        	  chart.load({
		  				columns : columns
		  			});
		          } else {
		        	  chart.load({
			  				columns : beforeColumns
			  			});

		          }
		      }

		window.addEventListener("scroll", checkSlide);
		$("#chartType").on("change",function(){
			var chartType = $(this).val();
			chart.transform(chartType);
		})
	}

	
		function debounce(func, wait = 20, immediate = true) {
	        var timeout;
	        return function () {
	          var context = this,
	            args = arguments;
	          var later = function () {
	            timeout = null;
	            if (!immediate) func.apply(context, args);
	          };
	          var callNow = immediate && !timeout;
	          clearTimeout(timeout);
	          timeout = setTimeout(later, wait);
	          if (callNow) func.apply(context, args);
	        };
	      }
		
		
	$(function() {
		searchNtc();
	});

	let ntc = {};

	function searchNtc() {
		let setting = {
			url : `${pageContext.request.contextPath }/board/ntcList`,
			method : "",
			dataType : "text",
			data : ntc,
			success : function(resp) {
				$('#ntcList').html(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR)
				console.log(status)
				console.log(error)
			}
		}
		$.ajax(setting);
	}


	function fn_paging(page) {
		searchForm.page.value = page;
		data.page = page;
		searchNtc();
	}
	
	
</script>	