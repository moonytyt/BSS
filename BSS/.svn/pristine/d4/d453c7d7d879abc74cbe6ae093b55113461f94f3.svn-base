package kr.or.ddit.BoardNtc.service;

import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.BoardNtc.dao.NtcboardDAO;
import kr.or.ddit.BoardNtc.vo.NtcboardVO;
import kr.or.ddit.atch.vo.AtchFileDetailVO;
import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.exception.PKNotFoundException;
import kr.or.ddit.vo.PaginationInfo;
import lombok.extern.slf4j.Slf4j;

@Service
public class NtcboardServiceImpl implements NtcboardSerivce {

	@Inject
	private NtcboardDAO ntcDAO;


	//	private static NtcboardSerivce getInstance() {
//		if (ntcService == null)
//			ntcService = new NtcboardServiceImpl();
//		return ntcService;
//	}

	
	@Override
	public boolean createNtc(NtcboardVO ntc) {
		return ntcDAO.insertNtc(ntc);
	}

	@Override
	public NtcboardVO retrieveNtc(int ntcNo) throws PKNotFoundException {
		NtcboardVO ntc = ntcDAO.selectNtc(ntcNo);
		if(ntc==null)
			throw new PKNotFoundException(MessageFormat.format("{0} 해당 글 없음", ntcNo));
		return ntc;
	}

	@Override
	public List<NtcboardVO> retrieveNtcList(PaginationInfo<NtcboardVO> paging) {
		long totalRecord = ntcDAO.selectTotalRecord(paging);
		paging.setTotalRecord(totalRecord);
		return ntcDAO.selectNtcList(paging);
	}

	@Override
	public boolean modifyNtc(NtcboardVO ntc) {

//		processAtchFileGroup(ntc);
		
		return ntcDAO.updateNtc(ntc) > 0;
	}

	@Override
	public boolean removeNtc() {
		// TODO Auto-generated method stub
		return true;
	}



}
