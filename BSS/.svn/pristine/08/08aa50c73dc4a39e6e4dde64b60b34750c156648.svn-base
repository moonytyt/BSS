package kr.or.ddit.edDocument.service;

import java.util.List;

import javax.inject.Inject;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Service;

import kr.or.ddit.edApproval.vo.SignpathDetailVO;
import kr.or.ddit.edApproval.vo.SignpathEmpVO;
import kr.or.ddit.edDocument.dao.DocumentDao;
import kr.or.ddit.edDocument.vo.DocumentTypeVO;
import kr.or.ddit.edDocument.vo.DocumentVO;
import kr.or.ddit.employee.vo.EmployeeVOWrapper;
import kr.or.ddit.pagingVO.PaginationInfo;

@Service
public class DocumentServiceImpl implements DocumentService {

	@Inject
	private DocumentDao documentDao;
	
	/**
	 * 문서 양식 목록 조회
	 */
	@Override
	public List<DocumentTypeVO> retrieveDocumentTypeList() {
		return documentDao.selectDocumentTypeList();
	}

	/**
	 * 결재요청함
	 */
	@Override
	public List<DocumentVO> retrieveKeepList(String empCd) {
		return documentDao.retrieveKeepList(empCd);
	}
	
	/**
	 * 결재요청함
	 */
	@Override
	public List<DocumentVO> retrieveRequestList(String empCd) {
		return documentDao.selectReqList(empCd);
	}
	
	/**
	 * 결재대기함
	 */
	@Override
	public List<DocumentVO> retrieveWaitList(String empCd) {
		return documentDao.selectWaitList(empCd);
	}
	
	/**
	 * 결재진행함
	 */
	@Override
	public List<DocumentVO> retrieveIngList(String empCd) {
		return documentDao.selectIngList(empCd);
	}
	
	/**
	 * 참조문서함
	 */
	@Override
	public List<DocumentVO> retrieveRefList(String empCd) {
		return documentDao.selectRefList(empCd);
	}

	/**
	 * 결재진행함
	 */
	@Override
	public List<DocumentVO> retrieveReturnList(String empCd) {
		return documentDao.selectReturnList(empCd);
	}
	
	/**
	 * 보관함, paging에 depCd 정보 포함됨
	 */
	@Override
	public List<DocumentVO> retrieveRegPublicList(PaginationInfo paging) {
		long totalRecord = documentDao.selectTotalRecord(paging);
		paging.setTotalRecord(totalRecord);
		return documentDao.selectRegPublicList(paging);
	}
	
	/**
	 * 양식 생성(insert)
	 */
	@Override
	public boolean createForm(DocumentTypeVO docTypeVO) {
		return documentDao.insertForm(docTypeVO) > 0;
	}

	/**
	 * 문서 양식 상세
	 */
	@Override
	public DocumentTypeVO retrieveDtCont(Integer dtNo) {
		return documentDao.selectDtCont(dtNo);
	}
	
	/**
	 * 기안된 문서 조회
	 */
	@Override
	public DocumentVO retrieveDocument(String docNo) {
		return documentDao.selectDocument(docNo);
	}
	
	/**
	 * 문서 insert
	 */
	@Override
	public boolean createDocument(DocumentVO documentVO) {
		
		int result = documentDao.insertDocument(documentVO);
		
		if(result > 0) { // 기안문 등록 성공시
			String docNo = documentVO.getDocNo(); // 인서트한 document의 번호 받아오기
			
			
			// 결재상태 등록 -> 결재선번호와 직원사번(소유자,empCd2)를 이용하여 결재상세를 불러와 그걸 결재상태에 문서번호와 넣어줌
			SignpathDetailVO signpathDetailVO = new SignpathDetailVO();
			signpathDetailVO.setSignpathNo(documentVO.getSignpathNo());
			signpathDetailVO.setEmpCd2(documentVO.getEmpCd());
			List<SignpathDetailVO> signpathDetailList = documentDao.selectSignPathDetailList(signpathDetailVO);
			for(SignpathDetailVO signpathDetail:signpathDetailList) { // 결재상태는 결재상세 갯수에 맞게 들어가야함
				
				SignpathEmpVO signpathEmp = new SignpathEmpVO();
				signpathEmp.setDocNo(docNo);							   // 결재문서
				signpathEmp.setSignpathNo(signpathDetail.getSignpathNo()); // 결재선 번호 먼가 없어도 될것같은데
				signpathEmp.setEmpCd(signpathDetail.getEmpCd());		   // 결재자
				signpathEmp.setSdTurn(signpathDetail.getSdTurn()); 		   // 결재순서
				signpathEmp.setCodeMethod(signpathDetail.getCodeMethod()); // 결재방법
				signpathEmp.setCodeStatus("SE_01"); // 결재상태코드 처음 인서트이기때문에 SE_01(결재요청)
				
				documentDao.insertSignPathEmp(signpathEmp); // 결재상태 등록
			}
		}else { // 기안문 등록 실패시
			
		}
		return result > 0;
	}

	/**
	 * 기안된 문서 상세조회시 결재선 조회
	 * @param signpathEmpVO 기안문서번호 이용
	 * @return 
	 */
	@Override
	public List<SignpathEmpVO> retrieveSignpathEmpList(SignpathEmpVO signpathEmpVO) {
		return documentDao.selectSignpathEmpList(signpathEmpVO);
	}

	@Override
	public boolean modifySignpathEmp(SignpathEmpVO signpathEmpVO) {
		return documentDao.signpathEmpUpdate(signpathEmpVO)>0;
	}
}










