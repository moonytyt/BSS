package kr.or.ddit.training.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import kr.or.ddit.training.service.TrainingService;
import kr.or.ddit.training.vo.LectorVO;
import kr.or.ddit.training.vo.TrainingVO;
import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class TrainingSelectController {
	private final TrainingService service;
	
	@ModelAttribute("training")
	public TrainingVO tdetail() {
		return new TrainingVO();
	}
	
	/**
	 * 직원교육 전체조회
	 * @param trainVO
	 * @return
	 */
	@RequestMapping("/pm/training/trainingList")
	public ModelAndView trainList(
			TrainingVO trainVO
	) {
		List<TrainingVO> trainList = service.retrieveTrainList(trainVO);
		
		ModelAndView mav = new ModelAndView();
		mav.addObject("trainList", trainList);
		mav.setViewName("pm/training/trainingList");
		return mav;
	}

	/**
	 * 직원교육 상세조회
	 * @param model
	 * @param trainNo
	 * @return
	 */
	@RequestMapping("/pm/training/trainingDetail")
	public String trainView(
			Model model, @RequestParam(name="what", required = true) int trainNo
	) {
		TrainingVO trainDetail = service.retrieveTrain(trainNo);		
		model.addAttribute("trainDetail", trainDetail);
		
		return "pm/training/trainingDetail";
	}
	
	
	/**
	 * 강사 전체조회
	 * @param model
	 * @return
	 */
	@RequestMapping("/pm/training/lectorList")
	public String lectorList(
			Model model
	) {
		List<LectorVO> lector = service.retrieveLector();		
		model.addAttribute("lector", lector);
		
		return "pm/training/lectorList";
	}

	/**
	 * 강사 상세조회
	 * @param model
	 * @param lectorId
	 * @return
	 */
	@RequestMapping("/pm/training/lectorDetail")
	public String lectorView(
			Model model, @RequestParam(name="what", required = true) String lectorId
			) {
		List<LectorVO> lectorDetail = service.retrievelectorDetail(lectorId);
		model.addAttribute("lectorDetail", lectorDetail);
		
		return "pm/training/lectorDetail";
	}
}
